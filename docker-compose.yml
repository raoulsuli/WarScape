version: "3.8"

services:
  client:
    build: ./client
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
    ports:
      - "3000:3000"
    container_name: frontend-container
    restart: always
    networks:
      - app-network
      - logging
      - monitoring

  server:
    build: ./server
    container_name: backend-container
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
    environment:
      NODE_ENV: production
    links:
      - db
    restart: always
    ports:
      - "5000:5000"
    networks:
      - app-network
      - internal
      - logging
      - monitoring

  db:
    image: mongo:5.0.6
    container_name: db-container
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_DATABASE=WarScape
    restart: always
    volumes:
      - dbdata:/data/db
      - ./configs/mongo/init-mongo.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - app-network
      - logging
      - monitoring

  prometheus:
    image: prom/prometheus
    volumes:
      - ./configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    networks:
      - monitoring
      - visualizing

  loki:
    image: grafana/loki
    volumes:
      - ./configs/loki/loki.yml:/etc/config/loki.yml
      - ./configs/loki/wal:/wal
    entrypoint:
      - /usr/bin/loki
      - -config.file=/etc/config/loki.yml
    ports:
      - 3100:3100
    networks:
      - logging
      - visualizing

  grafana:
    image: grafana/grafana
    volumes:
      - grafana-volume:/var/lib/grafana
    ports:
      - 3002:3000
    depends_on:
      - loki
    networks:
      - visualizing

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer-container
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./portainer-data:/data
    ports:
      - 9000:9000

  kong:
    image: kong:latest
    volumes:
      - ./configs/kong:/usr/local/kong/declarative
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
    ports:
      - 80:8000
      - 443:8443
      - 8001:8001
      - 8444:8444
    networks:
      - internal

volumes:
  dbdata:
  grafana-volume:

networks:
  app-network:
  internal:
  logging:
  visualizing:
  monitoring:
