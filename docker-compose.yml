version: "3.8"

services:
  client:
    build: ./client
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
    ports:
      - "3000:3000"
    container_name: frontend-container
    restart: always
    networks:
      - app-network
      - logging

  server:
    build: ./server
    container_name: backend-container
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
    environment:
      NODE_ENV: production
    links:
      - db
    restart: always
    ports:
      - "5000:5000"
    networks:
      - app-network
      - logging

  db:
    image: mongo:5.0.6
    container_name: db-container
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_DATABASE=WarScape
    restart: always
    volumes:
      - dbdata:/data/db
      - ./server/init-mongo.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - app-network

  loki:
    image: grafana/loki
    volumes:
        - ./configs/loki/loki.yml:/etc/config/loki.yml
        - ./configs/loki/wal:/wal
    entrypoint:
        - /usr/bin/loki
        - -config.file=/etc/config/loki.yml
    ports:
      - 3100:3100
    networks:
      - logging
      - visualizing

  grafana:
    image: grafana/grafana
    volumes:
      - grafana-volume:/var/lib/grafana
    ports:
      - 3002:3000
    depends_on:
      - loki
    networks:
      - visualizing

volumes:
  dbdata:
  grafana-volume:

networks:
  app-network:
  logging:
  visualizing:
